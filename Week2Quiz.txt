1) Name what each of the below is:
  a = 1 
  # => ex. a is a local variable, and is a Fixnum object with value 1
  
  @a = 2
  # => @a is an instance variable, and is a Fixnum object with value 2

  user = User.new
  # => user is a new instance object of the class User

  user.name
  # => the object user is calling the name getter instance method

  user.name = "Joe"
  # => the object user is calling the name setter instance method, resetting the object's name string value to "Joe"

2) How does a class mixin a module?
module Hand
  def show_hand
    ....
  end
end

class Player
  include Hand

  def initialize
  end
end

3) What's the difference between class variables and instance variables?
the class variable
ex: @@variable

the instance cariable
ex: @variable

4) What does attr_accessor do?
attr_accessor can define the getter and setter easy.

5) How would you describe this expression: Dog.some_method
There is a object named Dog, and it is calling the method named some_method.

6) In Ruby, what's the difference between subclassing and mixing in modules?
subclass can inheritance the other class. the module can mixing in difference classes.

7) Given that I can instantiate a user like this: User.new('Bob'), what would the initialize method look like for the User class?

class User
  attr_accessor :name

  def initialize(n)
    self.name = n
  end

end 

8) Can you call instance methods of the same class from other instance methods in that class?
Yes

9) When you get stuck, what's the process you use to try to trap the error?
